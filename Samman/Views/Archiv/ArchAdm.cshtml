@model IEnumerable<Samman.Models.DocFile>

@{
    ViewData["Title"] = "Список PDF-файлов";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- Подключение стилей -->
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/archiv.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Manchkin.styles.css" asp-append-version="true" />

    <!-- Добавление стилей для анимации загрузки -->
    <style>
        .loading-container {
            display: flex;
            justify-content: center;
            align-items: center;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.8);
            z-index: 9999;
        }

        .loading-animation {
            width: 100px;
            height: 100px;
            border: 10px solid #f3f3f3;
            border-top: 10px solid #3498db;
            border-radius: 50%;
            animation: spin 2s linear infinite;
        }

        /* Скроем контент страницы при загрузке */
        body {
            overflow: hidden;
        }
    </style>
</head>
<body class="content-archiv">
    <div id="content-window">
    <div class="text-center">
        <h1>Архив электронных проектных документов</h1>
        <br />
        <h1 style="font-size: 75%;">Этот архив - ключ к миру исключительной организации и эффективности в проектной работе. Внимательно хранимые здесь электронные проектные документы - это не просто файлы, это капитал знаний и опыта нашей команды. Здесь мы собрали лучшие идеи, творческие находки и трудные уроки, которые помогут нам двигаться вперед, достигая новых высот в наших проектах. Пусть этот архив станет нашим верным компаньоном в стремлении к новым вершинам достижений.</h1>
    </div>

        <div class="container">
            <form method="get" action="">
                <div class="row">
                    <div class="col-md-2">
                        <div class="input-group mb-3">
                            <input type="text" class="form-control" name="search" placeholder="Поиск по имени файла" value="@Context.Request.Query["search"].ToString()">
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="input-group mb-3">
                            <input type="number" class="form-control" name="filterYear" placeholder="Фильтр по году" value="@Context.Request.Query["filterYear"].ToString()">
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="input-group mb-3">
                            <input type="text" class="form-control" name="searchCategory" placeholder="Поиск по категории" value="@Context.Request.Query["searchCategory"].ToString()">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="input-group-append">
                            <button class="btn btn-primary" type="submit">Применить</button>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="input-group-append">
                            <a class="btn btn-primary" href="/Archiv/ArchDown" type="submit">Добавить</a>
                        </div>
                    </div>
                </div>
            </form>
        </div>

    <div class="table-scrollable">
        <table class="table table-bordered" id="pdfTable">
            <thead>
                <tr>
                    <th>Имя файла</th>
                    <th>Дата создания</th>
                    <th class="category-column">Категория</th>
                    <th>Действие</th>
                </tr>
            </thead>
            <tbody>
                @{
                    var searchQuery = Context.Request.Query["search"].ToString();
                    var docNameDbContext = new Samman.DataBase.DocNamesDbContext();
                    var docFileDbContext = new Samman.DataBase.DocFileDbContext();
                    var searchCategoryQuery = Context.Request.Query["searchCategory"].ToString();
                    var filterYear = Context.Request.Query["filterYear"].ToString();

                    var matchingArchiveItems = docNameDbContext.DocNames.AsQueryable();

                    if (!string.IsNullOrEmpty(searchQuery))
                    {
                        matchingArchiveItems = matchingArchiveItems.Where(ai => ai.DocFileTruename.Contains(searchQuery));
                    }

                    if (!string.IsNullOrEmpty(searchCategoryQuery))
                    {
                        matchingArchiveItems = matchingArchiveItems.Where(ai => ai.Category.Contains(searchCategoryQuery));
                    }

                    if (!string.IsNullOrEmpty(filterYear) && int.TryParse(filterYear, out var year))
                    {
                        matchingArchiveItems = matchingArchiveItems.Where(ai =>
                        (ai.DocFile != null && ai.DocFile.DateCreated.Year == year)
                        || (ai.DocFile == null && docFileDbContext.DocFile.Any(pf => pf.FileName == ai.DocFilename && pf.DateCreated.Year == year)));
                    }

                    var filteredArchiveItems = matchingArchiveItems.ToList();
                }
                @foreach (var archiveItem in filteredArchiveItems)
                {
                    <tr>
                        <td>@archiveItem.DocFileTruename</td>

                        <td>
                            @{
                                if (archiveItem.DocFile != null)
                                {
                                    @archiveItem.DocFile.DateCreated.ToString("dd.MM.yyyy")
                                }
                                else if (!string.IsNullOrEmpty(archiveItem.DocFilename))
                                {
                                    var pdfile = docFileDbContext.DocFile.FirstOrDefault(pf => pf.FileName == archiveItem.DocFilename);
                                    if (pdfile != null)
                                    {
                                        @pdfile.DateCreated.ToString("dd.MM.yyyy")
                                    }
                                    else
                                    {
                                        <span class="text-danger">Дата не доступна</span>
                                    }
                                }
                                else
                                {
                                    <span class="text-danger">Дата не доступна</span>
                                }
                            }
                        </td>

                        <td class="category-cell">@archiveItem.Category</td>

                        <!-- Apply the "button-cell" class to center buttons -->
                        <td class="button-cell">
                            @{
                                var pdfFile = docFileDbContext.DocFile.FirstOrDefault(pf => pf.FileName == archiveItem.DocFilename);
                                if (pdfFile != null)
                                {
                                        <a href="@Url.Action("ArchChange", "Archiv", new { id = pdfFile.Id })" target="_blank" class="btn btn-primary">Изменить</a>
                                }
                                else
                                {
                                    <span class="text-danger">PDF-файл не найден</span>
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    </div>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        function applyYearFilter() {
            var filterYear = document.getElementById("filterYear").value;
            var table = document.getElementById("pdfTable");
            var rows = table.getElementsByTagName("tr");

            for (var i = 1; i < rows.length; i++) {
                var row = rows[i];
                var cell = row.getElementsByTagName("td")[1];
                if (cell) {
                    var date = cell.textContent.trim();
                    var year = parseInt(date.split(".")[2]);
                    if (year !== parseInt(filterYear)) {
                        row.style.display = "none";
                    } else {
                        row.style.display = "";
                    }
                }
            }
        }
    </script>
</body>
</html>
